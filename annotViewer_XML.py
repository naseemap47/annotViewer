# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'img_test.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import glob
from numpy import sort
from viewer import get_bbox_xml
import os
import cv2


count = 0

# Read Directory and return list of all types of images
def read_dir(filename):
    img_list = []
    img_formats = ('*.jpg', '*.jpeg', '*.png')
    for img in img_formats:
        imgs = glob.glob(os.path.join(filename, img))
        img_list.append(imgs)

    sort(img_list)
    
    non_empty_img_list = []

    for i in img_list:
        if len(i)!=0:
            non_empty_img_list.append(i)

    final_img_list = []
    if len(non_empty_img_list)>0:
        for j in range(len(non_empty_img_list)):
            final_img_list = non_empty_img_list[j] + final_img_list
    
    return final_img_list


# to get bounding box of annotated xml file
def get_bbx_img(img_path):
    xml_path = os.path.splitext(img_path)[0] + '.xml'
    img = get_bbox_xml(xml_path)
    return img


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(638, 466)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../.designer/backup/icons/logo.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.photo = QtWidgets.QLabel(self.centralwidget)
        self.photo.setGeometry(QtCore.QRect(-4, 6, 641, 381))
        self.photo.setText("")
        self.photo.setScaledContents(True)
        self.photo.setObjectName("photo")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(-2, 394, 641, 31))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 638, 22))
        self.menubar.setObjectName("menubar")
        self.menufile = QtWidgets.QMenu(self.menubar)
        self.menufile.setObjectName("menufile")
        self.menutools = QtWidgets.QMenu(self.menubar)
        self.menutools.setObjectName("menutools")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_Dir = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../../../.designer/backup/icons/icons8-opened-folder-64.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Dir.setIcon(icon1)
        self.actionOpen_Dir.setObjectName("actionOpen_Dir")
        self.actionExit = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../../../.designer/backup/icons/icons8-shutdown-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon2)
        self.actionExit.setObjectName("actionExit")
        self.actionNext = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../../../.designer/backup/icons/icons8-circled-right-30.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNext.setIcon(icon3)
        self.actionNext.setObjectName("actionNext")
        self.actionPrevious = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../../../.designer/backup/icons/icons8-previous-30.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPrevious.setIcon(icon4)
        self.actionPrevious.setObjectName("actionPrevious")
        self.actionMaximise = QtWidgets.QAction(MainWindow)
        self.actionMaximise.setObjectName("actionMaximise")
        self.actionMinimise = QtWidgets.QAction(MainWindow)
        self.actionMinimise.setObjectName("actionMinimise")
        self.actionNormal = QtWidgets.QAction(MainWindow)
        self.actionNormal.setObjectName("actionNormal")
        self.menufile.addAction(self.actionOpen_Dir)
        self.menufile.addAction(self.actionExit)
        self.menutools.addAction(self.actionNext)
        self.menutools.addAction(self.actionPrevious)
        self.menuView.addAction(self.actionMaximise)
        self.menuView.addAction(self.actionMinimise)
        self.menuView.addAction(self.actionNormal)
        self.menubar.addAction(self.menufile.menuAction())
        self.menubar.addAction(self.menutools.menuAction())
        self.menubar.addAction(self.menuView.menuAction())

        self.retranslateUi(MainWindow)
        self.actionExit.triggered.connect(MainWindow.close) # type: ignore
        self.actionMaximise.triggered.connect(MainWindow.showMaximized) # type: ignore
        self.actionMinimise.triggered.connect(MainWindow.showMinimized) # type: ignore
        self.actionNormal.triggered.connect(MainWindow.showNormal) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.actionOpen_Dir.triggered.connect(self.openFileNameDialog)
        self.pushButton.clicked.connect(self.clicked_button1)
        self.pushButton_2.clicked.connect(self.clicked_button2)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "annotViewer"))
        MainWindow.setStatusTip(_translate("MainWindow", "annotViewer"))
        self.photo.setStatusTip(_translate("MainWindow", "Screen"))
        self.pushButton.setStatusTip(_translate("MainWindow", "go to Previous Image"))
        self.pushButton.setText(_translate("MainWindow", "Previous"))
        self.pushButton_2.setStatusTip(_translate("MainWindow", "got to Next Image"))
        self.pushButton_2.setText(_translate("MainWindow", "Next"))
        self.menufile.setTitle(_translate("MainWindow", "file"))
        self.menutools.setTitle(_translate("MainWindow", "Image"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.actionOpen_Dir.setText(_translate("MainWindow", "Open Dir"))
        self.actionOpen_Dir.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionNext.setText(_translate("MainWindow", "Next"))
        self.actionNext.setShortcut(_translate("MainWindow", "D"))
        self.actionPrevious.setText(_translate("MainWindow", "Previous"))
        self.actionPrevious.setShortcut(_translate("MainWindow", "A"))
        self.actionMaximise.setText(_translate("MainWindow", "Maximise"))
        self.actionMinimise.setText(_translate("MainWindow", "Minimise"))
        self.actionNormal.setText(_translate("MainWindow", "Normal"))

    

    def openFileNameDialog(self):
        global final_img_list
        global total_img

        # Reading Directory Path
        filename = QtWidgets.QFileDialog.getExistingDirectory()
        final_img_list = read_dir(filename)
        total_img = len(final_img_list) - 1

        # Sample Image at the First
        img = get_bbx_img(final_img_list[0])
        frame = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        image = QtGui.QImage(frame, frame.shape[1],frame.shape[0],frame.strides[0],QtGui.QImage.Format_RGB888)
        self.photo.setPixmap(QtGui.QPixmap.fromImage(image))


    # Previous Button
    def clicked_button1(self):
        global count
        if count==0:
            count = total_img
        else:
            count = count - 1
        
        # Image
        img = get_bbx_img(final_img_list[count])
        frame = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        image = QtGui.QImage(frame, frame.shape[1],frame.shape[0],frame.strides[0],QtGui.QImage.Format_RGB888)
        self.photo.setPixmap(QtGui.QPixmap.fromImage(image))


    # Next Button
    def clicked_button2(self):
        global count
        if count==total_img:
            count = 0
        else:
            count = count + 1
        img = get_bbx_img(final_img_list[count])
        frame = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        image = QtGui.QImage(frame, frame.shape[1],frame.shape[0],frame.strides[0],QtGui.QImage.Format_RGB888)
        self.photo.setPixmap(QtGui.QPixmap.fromImage(image))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
